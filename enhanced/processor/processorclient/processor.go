// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: processor.proto

package processorclient

import (
	"context"

	"finishy1995/device-manager/enhanced/processor/pb/processor"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GenerateDemoDeviceDataReq  = processor.GenerateDemoDeviceDataReq
	GenerateDemoDeviceDataResp = processor.GenerateDemoDeviceDataResp
	GenerateDemoMetadataReq    = processor.GenerateDemoMetadataReq
	GenerateDemoMetadataResp   = processor.GenerateDemoMetadataResp
	GetUpdateResultReq         = processor.GetUpdateResultReq
	GetUpdateResultResp        = processor.GetUpdateResultResp
	UpdateMetadataReq          = processor.UpdateMetadataReq
	UpdateMetadataResp         = processor.UpdateMetadataResp

	Processor interface {
		// DEMO use
		GenerateDemoMetadata(ctx context.Context, in *GenerateDemoMetadataReq, opts ...grpc.CallOption) (*GenerateDemoMetadataResp, error)
		// Benchmark use
		UpdateMetadata(ctx context.Context, in *UpdateMetadataReq, opts ...grpc.CallOption) (*UpdateMetadataResp, error)
		// Benchmark use
		GetUpdateResult(ctx context.Context, in *GetUpdateResultReq, opts ...grpc.CallOption) (*GetUpdateResultResp, error)
		// DEMO use
		GenerateDemoDeviceData(ctx context.Context, in *GenerateDemoDeviceDataReq, opts ...grpc.CallOption) (*GenerateDemoDeviceDataResp, error)
	}

	defaultProcessor struct {
		cli zrpc.Client
	}
)

func NewProcessor(cli zrpc.Client) Processor {
	return &defaultProcessor{
		cli: cli,
	}
}

// DEMO use
func (m *defaultProcessor) GenerateDemoMetadata(ctx context.Context, in *GenerateDemoMetadataReq, opts ...grpc.CallOption) (*GenerateDemoMetadataResp, error) {
	client := processor.NewProcessorClient(m.cli.Conn())
	return client.GenerateDemoMetadata(ctx, in, opts...)
}

// Benchmark use
func (m *defaultProcessor) UpdateMetadata(ctx context.Context, in *UpdateMetadataReq, opts ...grpc.CallOption) (*UpdateMetadataResp, error) {
	client := processor.NewProcessorClient(m.cli.Conn())
	return client.UpdateMetadata(ctx, in, opts...)
}

// Benchmark use
func (m *defaultProcessor) GetUpdateResult(ctx context.Context, in *GetUpdateResultReq, opts ...grpc.CallOption) (*GetUpdateResultResp, error) {
	client := processor.NewProcessorClient(m.cli.Conn())
	return client.GetUpdateResult(ctx, in, opts...)
}

// DEMO use
func (m *defaultProcessor) GenerateDemoDeviceData(ctx context.Context, in *GenerateDemoDeviceDataReq, opts ...grpc.CallOption) (*GenerateDemoDeviceDataResp, error) {
	client := processor.NewProcessorClient(m.cli.Conn())
	return client.GenerateDemoDeviceData(ctx, in, opts...)
}
